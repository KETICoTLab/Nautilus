---
- name: Install and Configure Kubernetes Cluster with PostgreSQL and MinIO
  hosts: "localhost"
  become: yes
  vars:
    kube_version: "1.32.0"
    cni_plugin: "calico"
    ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

  tasks:
  - name: Update system packages
    apt:
      update_cache: yes
      upgrade: dist

  - name: Install required dependencies
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gpg
      state: present

  - name: Install Docker Compose
    apt:
      name: docker-compose
      state: present

  - name: Deploy MinIO using Docker
    command: >
      docker run -d --name minio --restart always
      -p 9000:9000 -p 9001:9001
      -e MINIO_ACCESS_KEY=minio
      -e MINIO_SECRET_KEY=minio123
      -e TZ=Asia/Seoul
      -e LANG=ko_KR.utf8
      minio/minio server --console-address ":9001" /storage

  - name: Wait for MinIO to be ready
    wait_for:
      host: 127.0.0.1
      port: 9000
      delay: 5
      timeout: 60

  - name: Install MinIO client (mc)
    get_url:
      url: https://dl.min.io/client/mc/release/linux-amd64/mc
      dest: /usr/local/bin/mc
      mode: '0755'

  - name: Configure MinIO client alias
    command: /usr/local/bin/mc alias set myminio http://127.0.0.1:9000 minio minio123

  - name: Verify MinIO alias was created
    command: /usr/local/bin/mc ls
    register: mc_alias_output
    changed_when: false

  - name: Show MinIO alias output
    debug:
      var: mc_alias_output.stdout_lines

  - name: Ensure MinIO bucket for images exists
    command: /usr/local/bin/mc mb myminio/images || true

  - name: Set public access policy for the bucket
    command: /usr/local/bin/mc anonymous set public myminio/images
   
  - name: Ensure MinIO bucket exists
    command: /usr/local/bin/mc mb myminio/images
    ignore_errors: yes  # Ignore if the bucket already exists

  - name: Upload image to MinIO
    command: /usr/local/bin/mc cp /home/cotlab/workspace/Nautilus/nautilus/workspace/images/nautilus-pv-updated.tar myminio/images/

  - name: Install Docker, containerd
    apt:
      name:
        - docker-ce
        - docker-ce-cli
        - containerd.io
      state: present

  - name: Configure containerd (SystemdCgroup)
    block:
      - name: Generate default containerd configuration
        command: containerd config default
        register: containerd_config

      - name: Write the containerd configuration to file
        copy:
          content: "{{ containerd_config.stdout }}"
          dest: /etc/containerd/config.toml

      - name: Enable SystemdCgroup in containerd configuration
        replace:
          path: /etc/containerd/config.toml
          regexp: '^\s*SystemdCgroup = false$'
          replace: 'SystemdCgroup = true'

      - name: Restart containerd service
        systemd:
          name: containerd
          state: restarted
          enabled: yes

  - name: Start Docker service
    systemd:
      name: docker
      state: started
      enabled: yes

  - name: Install kubeadm, kubelet, and kubectl
    apt:
      name:
        - kubelet
        - kubeadm
        - kubectl
      state: present
      update_cache: yes

  - name: Hold Kubernetes packages at current version
    shell: apt-mark hold kubelet kubeadm kubectl

  - name: Enable and start kubelet service
    systemd:
      name: kubelet
      enabled: yes
      state: started

  - name: Disable swap
    command: swapoff -a

  - name: Ensure swap is disabled in fstab
    replace:
      path: /etc/fstab
      regexp: '^.*swap.*$'
      replace: ''

  - name: Configure sysctl settings for Kubernetes networking
    copy:
      dest: /etc/sysctl.d/k8s.conf
      content: |
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
    notify: Reload sysctl

  - name: Apply sysctl settings
    command: sysctl --system

  - name: Pre-pull Kubernetes images
    command: kubeadm config images pull

  - name: Initialize Kubernetes cluster (only on master node)
    command: kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=all

  - name: Configure kubectl for the root user
    shell: |
      mkdir -p $HOME/.kube
      cp /etc/kubernetes/admin.conf $HOME/.kube/config
      chown $(id -u):$(id -g) $HOME/.kube/config

  - name: Deploy network plugin (Calico)
    shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

  handlers:
    - name: Reload sysctl
      command: sysctl --system
